<?xml version='1.0' encoding='UTF-8'?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
    <servlet>
        <servlet-name>Faces Servlet</servlet-name>
        <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>Faces Servlet</servlet-name>
        <url-pattern>*.xhtml</url-pattern>
    </servlet-mapping>
    <context-param>
        <param-name>javax.faces.PROJECT_STAGE</param-name>
        <param-value>Development</param-value>
    </context-param>
    <context-param>
        <param-name>javax.faces.FACELETS_SKIP_COMMENTS</param-name>
        <param-value>true</param-value>
    </context-param>

    <welcome-file-list>
        <welcome-file>browseDocuments.xhtml</welcome-file>
    </welcome-file-list>

    <!--
    <context-param>
        <param-name>primefaces.THEME</param-name>
        <param-value>afterdark</param-value>
    </context-param>
    -->

    <!--
    <data-source>
        <name>java:app/jdbc/main</name>
        <class-name>oracle.jdbc.OracleDriver</class-name>
        <url>jdbc:oracle:thin:@localhost:1521:XE</url>
        <user>docmgr</user>
        <password>docmgr</password>
    </data-source>
    -->
    <!-- you need to copy the DBS's JDBC-Driver-JAR into glassfish's domain/lib directory -->
    <data-source>
        <name>java:app/jdbc/main</name>
        <class-name>org.postgresql.Driver</class-name>
        <url>jdbc:postgresql://127.0.0.1:5432/docmgr</url>
        <user>docmgr</user>
        <password>docmgr</password>
    </data-source>

    <!-- java ee security: http://docs.oracle.com/javaee/7/tutorial/security-webtier002.htm#GKBSA -->
    <!-- jdbc realm setup: http://docs.oracle.com/javaee/6/tutorial/doc/glxgo.html-->
    <!-- jdbc connection pool setup: via glassfish interface, as described in (2). The setup can be done using the
    command line, as described in (1).
      1. http://blog.c2b2.co.uk/2014/02/an-introduction-to-connection-pools-in.html
      2. https://computingat40s.wordpress.com/how-to-setup-a-jdbc-connection-in-glassfish/
    -->
    <!-- require authentication for all views (including the login view) -->
    <security-constraint>
        <web-resource-collection>
            <web-resource-name>webapplication</web-resource-name>
            <url-pattern>/*</url-pattern>
            <!-- specify no http-method to protect or not_to_protect: therefore all are protected -->
        </web-resource-collection>
        <auth-constraint>
            <role-name>user</role-name>
            <role-name>admin</role-name>
        </auth-constraint>
        <!-- specify no user-data-constraint; default is none -->
    </security-constraint>

    <!-- overwrite the preceding rule: allow viewing the login page for any role -->
    <security-constraint>
        <web-resource-collection>
            <web-resource-name>webapplication-login</web-resource-name>
            <url-pattern>/login.xhtml</url-pattern>
        </web-resource-collection>
        <!-- no auth constraint: anybody may access the resource -->
        <!-- specify no user-data-constraint; default is none -->
        <!-- TODO: should use CONFIDENTIAL as username and password are sent to the server -->
    </security-constraint>

    <!--only let admins create new users -->
    <security-constraint>
        <web-resource-collection>
            <web-resource-name>webapplication-newUser</web-resource-name>
            <url-pattern>/createUser.xhtml</url-pattern>
        </web-resource-collection>
        <auth-constraint>
            <role-name>admin</role-name>
        </auth-constraint>
        <!-- specify no user-data-constraint; default is none -->
    </security-constraint>
    <security-constraint>
        <web-resource-collection>
            <web-resource-name>webapplication-resources</web-resource-name>
            <url-pattern>/javax.faces.resource/*</url-pattern>
        </web-resource-collection>
    </security-constraint>


    <security-role>
        <role-name>admin</role-name>
    </security-role>
    <security-role>
        <role-name>user</role-name>
    </security-role>

    <!--  specify the authentication mechanism for all resources (to which access is constrained) -->
    <!-- define basic authentication for demonstration purposes -->
    <!-- TODO: should switch to form-based authentication -->
    <login-config>
        <auth-method>FORM</auth-method>
        <realm-name>docmgr-login-realm</realm-name>
        <form-login-config>
            <form-login-page>/login.xhtml</form-login-page>
            <form-error-page>/error.xhtml</form-error-page>
        </form-login-config>
    </login-config>

    <!-- @DataSourceDefinition(
    className = "oracle.jdbc.OracleDriver",
    name = "java:global/jdbc/main",
    user = "docmgr",
    password = "docmgr",
    url = "jdbc:oracle:thin:@localhost:1521:XE"
)-->
</web-app>